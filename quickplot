#!/bin/bash
# Quickplot by Adrian Vollmer <vollmer @ thphys.uni-heidelberg.de>
# Version 0.2
# Created March 31 2012

# Quickplot lets you quickly visualize data files by presenting a plot
# generated by Gnuplot.

# Changelog:
# v0.2: - Use awk instead of octave, which was overkill
#       - Refactored

# The MIT License (MIT)
# 
# Copyright (c) 2013 Adrian Vollmer
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
#  of this software and associated documentation files (the "Software"), to deal
#  in the Software without restriction, including without limitation the rights
#  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#  copies of the Software, and to permit persons to whom the Software is
#  furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
#  all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
#  THE SOFTWARE.

if [[ $* == "help" ]] ; then
cat << EOF
Quickplot v0.2 (based on Gnuplot)
    
    Usage:
        quickplot [options] file [column options] [file2 [column options] ... ]

    The file needs be readable by Gnuplot, i.e. a whitespace separated table
    of numbers in scientific form (e.g. -1.23e-14). Comments are allowed by
    preceding them with a '#'.
    
    [options] can contain the following keywords:

        logx:    Forces a logscale on the x-axis
        logy:    Forces a logscale on the y-axis
        logxy:   Forces a logscale on both the x- and y-axis
        linear:  Forces a linear scale on both the x- and y-axis
        nokey:   Suppresses the legend
        tofile:  Creates a PDF file instead of showing the plot on the screen

    If no specification for the scale is used, awk is used to guess
    whether a logscale is more suitable or not.
    
    [column options] can contain a number of pairs in the form of x:y, where
    x specifies the x-axis and y the y-axis. Example: 5:4 plots column 4 vs.
    column 5. If no column options are given, a default of 1:2 is assumed.
    Since this parameter is passed directly to Gnuplot, more advanced
    constructs such as '1:(\$2**2/\$1)' can be used, though some characters
    may have to be escaped properly.

    You can use the bash expansion feature to use shortcuts, such as
        quickplot logxy sampling.dat 1:{2..5}
EOF
    exit
fi

declare -a args
plotcom="set style data lines; plot "
scalecom=""
helpstring="Run 'quickplot help' for help."

args=("$@")
current_file=""

logscale="0"


is_file() {
    if [ -e "$1" ] ; then 
        return $(true)
    else 
        return $(false)
    fi
}


process_option() {
    case $1 in 
     "logx" ) 
        scalecom+="set logscale x;" 
        let logscale=1
        ;;
    "logy" ) 
        scalecom+="set logscale y;" 
        let logscale=1
        ;;
    "logxy" )
        scalecom+="set logscale xy;" 
        let logscale=1
        ;;
    "linear" ) 
        let logscale=1
        ;;
    "tofile" )
        termcom="set terminal pdf; set output 'quickplot.pdf';"        
        ;;
    "nokey" )
        keycom="unset key;"
        ;;
    * )
        echo "$1: Unknown option. $helpstring"
        exit
        ;;
    esac
}


# Prints "1" if ratio of max and min is over 100 and min positive, prints "0" else.
max_over_min() { 
    echo "$*" | awk '{if(min==""){min=max=$1}; if($1>max) {max=$1}; 
        if($1< min) {min=$1}; } END {print (max/min>100 && min>0)?"1":"0"}' 
}

# takes a column number, extracts the data from the first file in the
# argument list, and then checks the ratio of orders of magnitude
autodetect_scale() {
       # remove comments
    data=`cat $firstfile |grep -v ^\\#| awk "{print \$$1}"`
    return `max_over_min "$data"`
}


# process arguments
for arg in "${args[@]}"; do
    if is_file "$arg" ; then 
        if [[ $current_file == "" ]] ; then
            # it is the first file
            firstfile=$arg
        else # it's not the first file, so insert a comma now
            plotcom+=", "
        fi
        current_file=$arg
        plotcom+="\"$current_file\""
        first_using="1" # reset the "using" options
    else 
        if [[ $current_file == "" ]] ; then
            # this argument came before a filename, so it must be an option
            process_option $arg
        else # it's neither a file nor an option - must be a "using" option
            # but make sure it is:
            # if not x:y then error
            if  [[ $first_using == "0" ]] ; then
                # it's not the first "using" option, insert comma/filename
                plotcom+=", \"$current_file\""
            fi
            first_using="0"
            plotcom+=" using $arg" # append the "using" option
                # we need this for log autodetection:
            if [[ $cols == "" ]] ; then cols=$arg ; fi 
        fi
    fi
done


if [[ $current_file == "" ]] ; then
    echo "No files given! $helpstring"
    exit
fi

# Default "using" options: First and second column (using 1:2)
if [[ $cols == "" ]] ; then cols="1:2" ; fi
# TODO probably a bug when running this: quickplot a.dat b.dat 1:3
# if a.dat has only 2 columns


if [ $logscale -eq 0 ] ; then
    # autodetect logscale
    # idea: if max(col)/min(col)>100, then a logarithmic scale may be
    # more appropriate

    if autodetect_scale `echo $cols | sed 's/\:.*//g'` ; then
        scalecom+="set logscale x; "
    fi

    if autodetect_scale `echo $cols | sed 's/.*\://g'` ; then
        scalecom+="set logscale y; "
    fi
        
    if [ -n "${scalecom}" ] ; then
        echo Autodetected: $scalecom
    fi
fi

echo $keycom $termcom $scalecom $plotcom | gnuplot -p -
